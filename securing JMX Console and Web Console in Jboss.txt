
# Note:  
# 1. The user running the script must have administrative privileges.
# 2. The log file for the script will be generated as 'C:\JMX_Web_Console\JMX_Web_Console106_Log.log'.
# 3. Backup file will be generated at the same location of the existing file.
# 4. Jboss server needs to be restarted after running the script.
# 5. Please ensure to change the '$path' & '$webpath' with the installed Jboss server directory path

$ErrorActionPreference="SilentlyContinue"
Stop-Transcript | out-null
$ErrorActionPreference = "Continue"

if(!(Test-path "C:\JMX_Web_Console"))
{
    New-Item -path "C:\JMX_Web_Console" -ItemType directory -force
}

Start-Transcript -path "C:\JMX_Web_Console\JMX_Web_Console_Log.log" –append 
Write-Output "`n`n"
Write-Output "********************** Transcription started for JMX_Web_Console_VulnerabilityFix ***********************"



$path="C:\jboss-5.1.0.GA\jboss-5.1.0.GA\server\default\deploy\jmx-console.war\WEB-INF"
$file1 = "web.xml"
$bkpFile1 = "web_bkp.xml"

if(!(Test-Path $path\$bkpFile1)){
    New-Item $path\$bkpFile1 -type file
    Copy-Item  $path\$file1 $path\$bkpFile1
    Write-Output "web.xml file backup created successfully"
}

$file2 = "jboss-web.xml"
$bkpFile2 = "jboss-web_bkp.xml"

if(!(Test-Path $path\$bkpFile2)){
    New-Item $path\$bkpFile2 -type file
    Copy-Item  $path\$file2 $path\$bkpFile2
    Write-Output "jboss-web.xml file backup created successfully"
}

$webpath="C:\jboss-5.1.0.GA\jboss-5.1.0.GA\server\default\deploy\management\console-mgr.sar\web-console.war\WEB-INF"
$webfile1 = "web.xml"
$webbkpFile1 = "web_bkp.xml"

if(!(Test-Path $webpath\$webbkpFile1)){
    New-Item $webpath\$webbkpFile1 -type file
    Copy-Item  $webpath\$webfile1 $webpath\$webbkpFile1
    Write-Output "web.xml file backup created successfully"
}

$webfile2 = "jboss-web.xml"
$webbkpFile2 = "jboss-web_bkp.xml"

if(!(Test-Path $webpath\$webbkpFile2)){
    New-Item $webpath\$webbkpFile2 -type file
    Copy-Item  $webpath\$webfile2 $webpath\$webbkpFile2
    Write-Output "jboss-web.xml file backup created successfully"
}


$asd=gc $path\$file1

if(!($asd-match('--><security-constraint>')))
{
(Get-Content $path\$file1) -replace "<security-constraint>","--><security-constraint>"|Set-Content -Path $path\$file1
}
if(!($asd-match('</security-constraint><!--')))
{
(Get-Content $path\$file1) -replace "</security-constraint>","</security-constraint><!--"|Set-Content -Path $path\$file1
}


$asd2=gc $path\$file2

if(!($asd2-match('--><security-domain>')))
{
(Get-Content $path\$file2) -replace "<security-domain>","--><security-domain>"|Set-Content -Path $path\$file2
}
if(!($asd2-match('</security-domain><!--')))
{
(Get-Content $path\$file2) -replace "</security-domain>","</security-domain><!--"|Set-Content -Path $path\$file2
}


#2nd part -----------------


$webasd=gc $webpath\$webfile1

if(!($webasd-match('--><security-constraint>')))
{
(Get-Content $webpath\$webfile1) -replace "<security-constraint>","--><security-constraint>"|Set-Content -Path $webpath\$webfile1
}
if(!($webasd-match('</security-constraint><!--')))
{
(Get-Content $webpath\$webfile1) -replace "</security-constraint>","</security-constraint><!--"|Set-Content -Path $webpath\$webfile1
}


$webasd2=gc $webpath\$webfile2

if(!($webasd2-match('--><security-domain>')))
{
(Get-Content $webpath\$webfile2) -replace "<security-domain>","--><security-domain>"|Set-Content -Path $webpath\$webfile2
}
if(!($webasd2-match('</security-domain><!--')))
{
(Get-Content $webpath\$webfile2) -replace "</security-domain>","</security-domain><!--"|Set-Content -Path $webpath\$webfile2
}

Stop-Transcript 